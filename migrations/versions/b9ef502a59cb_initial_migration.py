"""Initial migration

Revision ID: b9ef502a59cb
Revises: 
Create Date: 2024-06-19 12:57:53.441431

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b9ef502a59cb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('comments', 'text',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('files', 'type',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
    op.alter_column('projects', 'start_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=False)
    op.create_foreign_key(None, 'projects', 'workers', ['manager_id'], ['id'])
    op.drop_constraint('manual_status_key', 'status', type_='unique')
    op.alter_column('tasks', 'start_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.alter_column('tasks', 'end_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.alter_column('tasks', 'worker_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('workers', 'title',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('workers', 'login',
               existing_type=sa.VARCHAR(length=32),
               type_=sa.String(length=100),
               nullable=False)
    op.alter_column('workers', 'password',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('workers', 'email',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.create_unique_constraint(None, 'workers', ['email'])
    op.create_unique_constraint(None, 'workers', ['login'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'workers', type_='unique')
    op.drop_constraint(None, 'workers', type_='unique')
    op.alter_column('workers', 'email',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('workers', 'password',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('workers', 'login',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=32),
               nullable=True)
    op.alter_column('workers', 'title',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('tasks', 'worker_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('tasks', 'end_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=True)
    op.alter_column('tasks', 'start_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=True)
    op.create_unique_constraint('manual_status_key', 'status', ['status'])
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.alter_column('projects', 'start_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=False)
    op.alter_column('files', 'type',
               existing_type=sa.VARCHAR(length=10),
               nullable=False)
    op.alter_column('comments', 'text',
               existing_type=sa.TEXT(),
               nullable=True)
    # ### end Alembic commands ###
